@startuml
!define RECTANGLE class

RECTANGLE Blockchain {
  +chain: Array<Block>
  +networkNodes: Array<String>
  +node: Node
  +getBlockchain(): Array<Object>
  +createGenesisBlock(): Block
  +getLastBlock(): Block
  __
  -constructor()
}

RECTANGLE Node {
  +currentNodeId: String
  +blockchain: Blockchain
  +networkNodes: Array<String>
  +pendingTransactions: Array<Transaction>
  +miner: Miner
  +receiveTransaction(transaction: Transaction)
  +addTransactionToPendingTransactions(newTransaction: Transaction): Number
  +minePendingTransactions()
  +getLastBlock(): Block
  +registerNode()
  __
  -constructor(blockchain: Blockchain)
}

RECTANGLE Miner {
  +createNewBlock(nonce: Number, previousBlockHash: String, hash: String): Block
  +proofOfWork(previousBlockHash: String, currentBlockData: Object): Number
  +hashBlock(previousBlockHash: String, currentBlockData: Object, nonce: Number): String
  __
  -constructor(node: Node)
}

RECTANGLE Wallet {
  +transactionId: String
  +amount: Number
  +sender: String
  +recipient: String
  +createAndBroadCastTransaction()
  __
  -constructor(node: Node, amount: Number, sender: String, recipient: String)
}

class Transaction {
  +transactionId: String
  +amount: Number
  +sender: String
  +recipient: String
}

Blockchain --> Node : has a
Node --> Miner : has a
Wallet --> Node : sends transactions to
Node --> Blockchain : accesses

@enduml
